package kz.snakelario.entities;

import java.util.LinkedList;

import kz.snakelario.Constants;
import kz.snakelario.Textures;
import kz.snakelario.Vector2;

import org.andengine.opengl.vbo.VertexBufferObjectManager;

public class SnakeBody implements Constants {
	private Snake _snake;
	private int _step = 0;
	
	private LinkedList<SnakeBodyPart> _body;
	private Textures _textures;
	private VertexBufferObjectManager _vertexBufferObjectManager;
	
	public SnakeBody(Snake snake, Textures textures,
			VertexBufferObjectManager pSpriteVertexBufferObject) {
		_snake = snake;
		_body = new LinkedList<SnakeBodyPart>();
		_textures = textures;
		_vertexBufferObjectManager = pSpriteVertexBufferObject;
	}
	
	public void grow() {
		float x = 0;
		float y = 0;
		Vector2 direction;
		
		SnakeBodyPart firstPart = first();
		if (firstPart == null) {		
			x = _snake.getHead().getX();
			y = _snake.getHead().getY();
			direction = _snake.getHead().direction;						
		} else {
			x = firstPart.getX();
			y = firstPart.getY();
			direction = firstPart.direction;
		}
		direction.mul(SNAKE_WIDTH);
		Vector2 newPos = Vector2.sub(new Vector2(x, y), direction);
		
		
		SnakeBodyPart bodyPart = new SnakeBodyPart(snake.getPositionX(), snake.getPositionY(), 
			_textures, _vertexBufferObjectManager);
		_body.add(bodyPart);
		snake.attachChild(bodyPart);
	}
	
	private SnakeBodyPart first() {
		if (_body.size() == 0)
			return null;
		return _body.getFirst();
	}
	
	public void move(Snake snake) {
		if (_body.size() > 0) {
			SnakeBodyPart first = _body.getFirst();
			_body.removeFirst();
			_body.add(first);
			first.setPosition(snake.getPositionX(), snake.getPositionY());
		}
	}
}
